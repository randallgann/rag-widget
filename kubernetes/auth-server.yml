# auth-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-server
  template:
    metadata:
      labels:
        app: auth-server
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:13-alpine
        command: ['sh', '-c', 
          'until pg_isready -h postgres -U postgres; do echo "Waiting for postgres..."; sleep 2; done;']
      containers:
      - name: auth-server
        image: rag-widget-auth-server:latest  # Local image
        imagePullPolicy: Never
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Waiting for PostgreSQL to be fully initialized..."
            sleep 20
            node dist/app.js
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        - name: NODE_ENV
          value: "development"
        - name: LOG_LEVEL
          value: "debug"
        - name: DB_HOST
          value: "postgres"
        - name: DB_PORT
          value: "5432"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: DB_NAME
          value: "youtube_rag"
        - name: AUTH0_DOMAIN
          valueFrom:
            secretKeyRef:
              name: auth0-secret
              key: AUTH0_DOMAIN
        - name: AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: auth0-secret
              key: AUTH0_CLIENT_ID
        - name: AUTH0_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: auth0-secret
              key: AUTH0_CLIENT_SECRET
        - name: AUTH0_CALLBACK_URL
          valueFrom:
            secretKeyRef:
              name: auth0-secret
              key: AUTH0_CALLBACK_URL
        - name: AUTH0_AUDIENCE
          valueFrom:
            secretKeyRef:
              name: auth0-secret
              key: AUTH0_AUDIENCE
        - name: SESSION_KEY
          valueFrom:
            secretKeyRef:
              name: auth0-secret
              key: SESSION_KEY
        - name: FRONTEND_URL
          value: "http://127.0.0.1:3003"
        - name: ADMIN_PORTAL_URL
          value: "http://127.0.0.1:3000"
        # GCP Configuration
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/gcp-sa-key.json"
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: gcp-config
              key: GCP_PROJECT_ID
        - name: GCP_PUBSUB_TOPIC
          valueFrom:
            configMapKeyRef:
              name: gcp-config
              key: GCP_PUBSUB_TOPIC
        - name: GCP_STORAGE_BUCKET
          valueFrom:
            configMapKeyRef:
              name: gcp-config
              key: GCP_STORAGE_BUCKET
        volumeMounts:
        - name: gcp-key-volume
          mountPath: "/var/secrets/google"
          readOnly: true
      volumes:
      - name: gcp-key-volume
        secret:
          secretName: gcp-secrets
          items:
          - key: gcp-sa-key.json
            path: gcp-sa-key.json
---
apiVersion: v1
kind: Service
metadata:
  name: auth-server
spec:
  type: LoadBalancer  # Or ClusterIP if you'll access through Ingress
  selector:
    app: auth-server
  ports:
  - port: 3001
    targetPort: 3001